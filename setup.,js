#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üöÄ Setting up Claude Analytics Application...\n');

// Check Node.js version
const nodeVersion = process.version;
const majorVersion = parseInt(nodeVersion.slice(1).split('.')[0]);

if (majorVersion < 16) {
    console.error('‚ùå Node.js version 16 or higher is required.');
    console.error(`   Current version: ${nodeVersion}`);
    console.error('   Please update Node.js: https://nodejs.org/');
    process.exit(1);
}

console.log(`‚úÖ Node.js version check passed (${nodeVersion})`);

// Create required directories
const directories = ['uploads', 'reports'];
directories.forEach(dir => {
    if (!fs.existsSync(dir)) {
        fs.mkdirSync(dir, { recursive: true });
        console.log(`‚úÖ Created directory: ${dir}/`);
    } else {
        console.log(`‚úÖ Directory exists: ${dir}/`);
    }
});

// Check if .env file exists
if (!fs.existsSync('.env')) {
    const envTemplate = `# Claude API Configuration
CLAUDE_API_KEY=your_claude_api_key_here

# Server Configuration
PORT=5000
NODE_ENV=development

# File Upload Limits
MAX_FILE_SIZE=10485760
UPLOAD_DIR=uploads

# Report Storage
REPORTS_DIR=reports

# CORS Settings
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5000
`;
    
    fs.writeFileSync('.env', envTemplate);
    console.log('‚úÖ Created .env template file');
    console.log('‚ö†Ô∏è  Please add your Claude API key to the .env file');
} else {
    console.log('‚úÖ .env file exists');
}

// Install root dependencies
console.log('\nüì¶ Installing root dependencies...');
try {
    execSync('npm install', { stdio: 'inherit' });
    console.log('‚úÖ Root dependencies installed');
} catch (error) {
    console.error('‚ùå Failed to install root dependencies');
    process.exit(1);
}

// Install client dependencies
console.log('\nüì¶ Installing client dependencies...');
try {
    process.chdir('client');
    execSync('npm install', { stdio: 'inherit' });
    process.chdir('..');
    console.log('‚úÖ Client dependencies installed');
} catch (error) {
    console.error('‚ùå Failed to install client dependencies');
    process.exit(1);
}

// Check for Claude API key
const envContent = fs.readFileSync('.env', 'utf8');
const hasApiKey = envContent.includes('CLAUDE_API_KEY=') && 
                  !envContent.includes('CLAUDE_API_KEY=your_claude_api_key_here');

console.log('\nüéâ Setup completed successfully!\n');

if (!hasApiKey) {
    console.log('‚ö†Ô∏è  IMPORTANT: Add your Claude API key to the .env file');
    console.log('   Get your API key from: https://console.anthropic.com/\n');
}

console.log('üöÄ To start the application:');
console.log('   npm run dev       # Start both server and client');
console.log('   npm run server    # Start server only');
console.log('   npm run client    # Start client only\n');

console.log('üìñ Open http://localhost:3000 in your browser');
console.log('üìö Read README.md for detailed usage instructions');

if (!hasApiKey) {
    console.log('\n‚ùó Remember to add your Claude API key before starting!');
}